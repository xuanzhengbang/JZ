<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.opopto.zdsetmealfood.dao.ZdSetmealMapper" >
  <resultMap id="BaseResultMap" type="com.opopto.zdsetmealfood.entity.ZdSetmeal" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="book_date" property="bookDate" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="dine_type" property="dineType" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="VARCHAR" />
    <result column="create_uid" property="createUid" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, price, book_date, place, dine_type, num, create_uid, del_flag,
    create_time, update_time, `desc`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmealExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from zd_setmeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zd_setmeal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from zd_setmeal
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zd_setmeal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmealExample" >
    delete from zd_setmeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmeal" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zd_setmeal (code, price, book_date, 
      place, dine_type, num,
      create_uid, del_flag, create_time, 
      update_time, `desc`)
    values (#{code,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{bookDate,jdbcType=VARCHAR},
      #{place,jdbcType=VARCHAR}, #{dineType,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR},
      #{createUid,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{desc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmeal" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zd_setmeal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="bookDate != null" >
        book_date,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="dineType != null" >
        dine_type,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createUid != null" >
        create_uid,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="bookDate != null" >
        #{bookDate,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="dineType != null" >
        #{dineType,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null" >
        #{createUid,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmealExample" resultType="java.lang.Integer" >
    select count(*) from zd_setmeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zd_setmeal
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.bookDate != null" >
        book_date = #{record.bookDate,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.dineType != null" >
        dine_type = #{record.dineType,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.createUid != null" >
        create_uid = #{record.createUid,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.desc != null" >
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zd_setmeal
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      book_date = #{record.bookDate,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      dine_type = #{record.dineType,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=VARCHAR},
      create_uid = #{record.createUid,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      `desc` = #{record.desc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmeal" >
    update zd_setmeal
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="bookDate != null" >
        book_date = #{bookDate,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="dineType != null" >
        dine_type = #{dineType,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null" >
        create_uid = #{createUid,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.opopto.zdsetmealfood.entity.ZdSetmeal" >
    update zd_setmeal
    set code = #{code,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      book_date = #{bookDate,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      dine_type = #{dineType,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      create_uid = #{createUid,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `desc` = #{desc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>